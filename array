
       1.1  >>>     implementation and algorithm to determine if a string has all unique character what if you can't use additional



import static java.lang.System.exit;

public class Main {
    public static void main(String[] args) {



                       ****** method 1 *******

//        String str = "niyaz";
//        for(int i=0;i<str.length()-2;i++){
//            for(int j=i+1;j<str.length()-1;j++){
//                if(str.charAt(i)==str.charAt(j)){
//                    System.out.println("not unique");
//                    exit(0);
//                }
//            }
//
//        }
//        System.out.println("it is string unique");




                  ****** method 2 *******  (OPTIMIZED)

        String str="NIYAZ";
        boolean[] a=new boolean[128];
        for(int i=0;i<str.length();i++){
            int val=str.charAt(i);
            if(a[val]){
                System.out.println(false);
                exit(0);
            }
            a[val]=true;

        }
        System.out.println(true);
        exit(0);

    }
}
*problem no 2 Urlify




class Main{
    
    public static void main(String[] arg){
        String str ="Mr John Smith        ";
        int n=str.trim().length();
        replaceSpaces(str.toCharArray(),n);
       

    }
    static void replaceSpaces(char[] str,int truelength){
        int spacecount=0,index,i=0;
        for(i=0;i<truelength;i++){
            if(str[i]==' '){
                spacecount++;
            }
        }
        index=truelength+spacecount*2;
        if(truelength<str.length)str[truelength]='\0';
        for(i=truelength-1;i>=0;i--){
            if(str[i]==' '){
            str[index-1]='0';
            str[index-2]='2';
            str[index-3]='%';
            index=index-3;
        }
        else{
            str[index-1]=str[i];
            index--;
        }

    } System.out.println(str);
}
}
              ***************               
1.5 there are three types of edits that can be performed on strings: insert a character ,remomve a character,or replace a character Given two String , 
write a function if they are one edit(or zero edits) away.
/**
 * OneAway
 */
public class OneAway {

    public static void main(String[] args) {
        String s1="pale";
        String s2="ple";
        boolean ans1= oneEditReplace(s1,s2);
        boolean ans2 = oneEditInsert(s1,s2)||oneEditInsert(s2, s1);

        System.out.println(ans1);
        System.out.println(ans2);
        boolean ans3=ans1||ans2;
        System.out.println(ans3);
        
    }

    private static boolean oneEditInsert(String s1, String s2) {
       int index1=0;
        int index2=0;
        while(index1<s1.length() && index2<s2.length()){
            if(s1.charAt(index1)!=s2.charAt(index2)){
                if(index1!=index2){
                    return false;

                }
                index2++;
            
            }
            else{
                index1++;
                index2++;

            }
        }
        return true;
    }

    private static boolean oneEditReplace(String s1, String s2) {
        int count=0;
      if(s1.equals(s2)) return true;

    else{
        for(int i=0;i<s2.length();i++){
            if(s1.charAt(i)!=s2.charAt(i)){
                count++;
                if(count>1){
                    return false;
                }
            }
        }
    }
    return true;

    }
}
              *****************

1.6 
public class compressionstr {
    public static void main(String[] args) {
        int count=1;
        String s="aabcccccaaa";
        
        for(int i =1;i<s.length();i++){
             if(s.charAt(i)!=s.charAt(i-1)){
                System.out.print(s.charAt(i-1));
                System.out.print(count);
                count=1;
            } else count++;

            if((i+1)>=s.length()){
                if(s.charAt(i)!=s.charAt(i-1)){
                    System.out.print(s.charAt(i));
                    System.out.print("1");
                }
                else {
                System.out.print(s.charAt(i));
                System.out.print(count);}
            }
            
            
        }
        

    }
}
