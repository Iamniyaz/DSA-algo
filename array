
       1.1  >>>     implementation and algorithm to determine if a string has all unique character what if you can't use additional



import static java.lang.System.exit;

public class Main {
    public static void main(String[] args) {



                       ****** method 1 *******

//        String str = "niyaz";
//        for(int i=0;i<str.length()-2;i++){
//            for(int j=i+1;j<str.length()-1;j++){
//                if(str.charAt(i)==str.charAt(j)){
//                    System.out.println("not unique");
//                    exit(0);
//                }
//            }
//
//        }
//        System.out.println("it is string unique");




                  ****** method 2 *******  (OPTIMIZED)

        String str="NIYAZ";
        boolean[] a=new boolean[128];
        for(int i=0;i<str.length();i++){
            int val=str.charAt(i);
            if(a[val]){
                System.out.println(false);
                exit(0);
            }
            a[val]=true;

        }
        System.out.println(true);
        exit(0);

    }
}
*problem no 2 Urlify




class Main{
    
    public static void main(String[] arg){
        String str ="Mr John Smith        ";
        int n=str.trim().length();
        replaceSpaces(str.toCharArray(),n);
       

    }
    static void replaceSpaces(char[] str,int truelength){
        int spacecount=0,index,i=0;
        for(i=0;i<truelength;i++){
            if(str[i]==' '){
                spacecount++;
            }
        }
        index=truelength+spacecount*2;
        if(truelength<str.length)str[truelength]='\0';
        for(i=truelength-1;i>=0;i--){
            if(str[i]==' '){
            str[index-1]='0';
            str[index-2]='2';
            str[index-3]='%';
            index=index-3;
        }
        else{
            str[index-1]=str[i];
            index--;
        }

    } System.out.println(str);
}
}
